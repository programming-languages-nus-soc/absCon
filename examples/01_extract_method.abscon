
// Abstractions and concretization rules for "Extract Method" refactoring.


#declares
{
	// Bytecode features and groups.

	// Load operations.
	f_21_iload = OP_iload;
	f_22_lload = OP_lload;
	f_23_fload = OP_fload;
	f_24_dload = OP_dload;
	f_25_aload = OP_aload;
	f_26_iload_0 = OP_iload_0;
	f_27_iload_1 = OP_iload_1;
	f_28_iload_2 = OP_iload_2;
	f_29_iload_3 = OP_iload_3;
	f_30_lload_0 = OP_lload_0;
	f_31_lload_1 = OP_lload_1;
	f_32_lload_2 = OP_lload_2;
	f_33_lload_3 = OP_lload_3;
	f_34_fload_0 = OP_fload_0;
	f_35_fload_1 = OP_fload_1;
	f_36_fload_2 = OP_fload_2;
	f_37_fload_3 = OP_fload_3;
	f_38_dload_0 = OP_dload_0;
	f_39_dload_1 = OP_dload_1;
	f_40_dload_2 = OP_dload_2;
	f_41_dload_3 = OP_dload_3;
	f_42_aload_0 = OP_aload_0;
	f_43_aload_1 = OP_aload_1;
	f_44_aload_2 = OP_aload_2;
	f_45_aload_3 = OP_aload_3;

	// Set of load operations.
	s_load = setOf(
		f_21_iload,
		f_22_lload,
		f_23_fload,
		f_24_dload,
		f_25_aload,
		f_26_iload_0,
		f_27_iload_1,
		f_28_iload_2,
		f_29_iload_3,
		f_30_lload_0,
		f_31_lload_1,
		f_32_lload_2,
		f_33_lload_3,
		f_34_fload_0,
		f_35_fload_1,
		f_36_fload_2,
		f_37_fload_3,
		f_38_dload_0,
		f_39_dload_1,
		f_40_dload_2,
		f_41_dload_3,
		f_42_aload_0,
		f_43_aload_1,
		f_44_aload_2,
		f_45_aload_3
	);

	// Store operations.
	f_54_istore = OP_istore;
	f_55_lstore = OP_lstore;
	f_56_fstore = OP_fstore;
	f_57_dstore = OP_dstore;
	f_58_astore = OP_astore;
	f_59_istore_0 = OP_istore_0;
	f_60_istore_1 = OP_istore_1;
	f_61_istore_2 = OP_istore_2;
	f_62_istore_3 = OP_istore_3;
	f_63_lstore_0 = OP_lstore_0;
	f_64_lstore_1 = OP_lstore_1;
	f_65_lstore_2 = OP_lstore_2;
	f_66_lstore_3 = OP_lstore_3;
	f_67_fstore_0 = OP_fstore_0;
	f_68_fstore_1 = OP_fstore_1;
	f_69_fstore_2 = OP_fstore_2;
	f_70_fstore_3 = OP_fstore_3;
	f_71_dstore_0 = OP_dstore_0;
	f_72_dstore_1 = OP_dstore_1;
	f_73_dstore_2 = OP_dstore_2;
	f_74_dstore_3 = OP_dstore_3;
	f_75_astore_0 = OP_astore_0;
	f_76_astore_1 = OP_astore_1;
	f_77_astore_2 = OP_astore_2;
	f_78_astore_3 = OP_astore_3;

	// Set of store operations.
	s_store = setOf(
		f_54_istore,
		f_55_lstore,
		f_56_fstore,
		f_57_dstore,
		f_58_astore,
		f_59_istore_0,
		f_60_istore_1,
		f_61_istore_2,
		f_62_istore_3,
		f_63_lstore_0,
		f_64_lstore_1,
		f_65_lstore_2,
		f_66_lstore_3,
		f_67_fstore_0,
		f_68_fstore_1,
		f_69_fstore_2,
		f_70_fstore_3,
		f_71_dstore_0,
		f_72_dstore_1,
		f_73_dstore_2,
		f_74_dstore_3,
		f_75_astore_0,
		f_76_astore_1,
		f_77_astore_2,
		f_78_astore_3
	);

	// Const operations.
	f_2_iconst_m1 = OP_iconst_m1;
	f_3_iconst_0 = OP_iconst_0;
	f_4_iconst_1 = OP_iconst_1;
	f_5_iconst_2 = OP_iconst_2;
	f_6_iconst_3 = OP_iconst_3;
	f_7_iconst_4 = OP_iconst_4;
	f_8_iconst_5 = OP_iconst_5;
	f_9_lconst_0 = OP_lconst_0;
	f_10_lconst_1 = OP_lconst_1;
	f_11_fconst_0 = OP_fconst_0;
	f_12_fconst_1 = OP_fconst_1;
	f_13_fconst_2 = OP_fconst_2;
	f_14_dconst_0 = OP_dconst_0;
	f_15_dconst_1 = OP_dconst_1;
	f_16_bipush = OP_bipush;
	f_17_sipush = OP_sipush;
	f_18_ldc = OP_ldc;
	f_19_ldc_w = OP_ldc_w;
	f_20_ldc2_w = OP_ldc2_w;

	// Set of const operations.
	s_const = setOf(
		f_2_iconst_m1,
		f_3_iconst_0,
		f_4_iconst_1,
		f_5_iconst_2,
		f_6_iconst_3,
		f_7_iconst_4,
		f_8_iconst_5,
		f_9_lconst_0,
		f_10_lconst_1,
		f_11_fconst_0,
		f_12_fconst_1,
		f_13_fconst_2,
		f_14_dconst_0,
		f_15_dconst_1,
		f_16_bipush,
		f_17_sipush,
		f_18_ldc,
		f_19_ldc_w,
		f_20_ldc2_w
	);
}

#abstract
{
	#concVec vec;
	#abstVec abst;

	#assigns {
		setFeatures(abst, s_load) = 0;
		setFeatures(abst, s_store) = 0;
		setFeatures(abst, s_const) = 0;
	}
}

#concrete
{
	#clone vec = VT_BYTECODE_INLINED;
	#query veq = VT_BYTECODE;

	#filters {
		forall (vi in inlinedInto(vec)): {
			veq != vi;
		};
	}
}
